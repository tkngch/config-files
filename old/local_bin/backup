#!/usr/bin/sh

# rsync - a fast, versatile, remote (and local) file-copying tool
#     Local:  rsync [OPTION...] SRC... [DEST]

# -a, --archive
#     This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and want to preserve almost everything (with -H being a notable omission).  The only exception to the above equivalence is when --files-from is specified, in which case -r is not implied.
#     Note that -a does not preserve hardlinks, because finding multiply-linked files is expensive.  You must separately specify -H.

# -r, --recursive
#     This tells rsync to copy directories recursively.

# -l, --links
#     When symlinks are encountered, recreate the symlink on the destination.

# -p, --perms
#     This option causes the receiving rsync to set the destination permissions to be the same as the source permissions.

# -t, --times
#     This  tells  rsync to transfer modification times along with the files and update them on the remote system.

# -g, --group
#     This  option  causes  rsync  to  set the group of the destination file to be the same as the source file.  If the receiving program is not running as the super-user (or if --no-super was specified), only groups that the     invoking user on the receiving side is a member of will be preserved.  Without this option, the group is set to the default group of the invoking user on the receiving side.

# -o, --owner
#     This option causes rsync to set the owner of the destination file to be the same as the source file, but only if the receiving rsync is being run as the super-user (see also the --super and --fake-super options).

# -D     The -D option is equivalent to --devices --specials.

# --devices
#     This option causes rsync to transfer character and block device files to the remote system to recreate these devices.  This option has no effect if the receiving rsync is not run as the super-user (see also the  --super     and --fake-super options).

# --specials
#     This option causes rsync to transfer special files such as named sockets and fifos.

# -n, --dry-run
#     This makes rsync perform a trial run that doesn’t make any changes (and produces mostly the same output as a real run).

# --delete
#     This  tells  rsync to delete extraneous files from the receiving side (ones that aren’t on the sending side), but only for the directories that are being synchronized.

# -f, --filter=RULE
#     This option allows you to add rules to selectively exclude certain files from the list of files to be transferred.

# --progress
#     This  option  tells  rsync  to print information showing the progress of the transfer.

rsync -a --delete --exclude="/backup" --exclude="/mnt" --exclude="/tmp" --exclude="/vbox" --exclude="/var/software" --exclude="/.cache" --exclude="/.local" --exclude="**/__pycache__" --exclude="**.pyc" --progress ${HOME}/ ${HOME}/backup/


# # config file is /etc/rsnapshot.conf
#
# echo "Daily snapshot. "
# sudo rsnapshot -v daily
# echo "Done."
#
# if [ "$(date +%u)" -gt 5 ]; then
#     echo "Today is a weekend. Running weekly snapshot. ";
#     sudo rsnapshot -v weekly
#     echo "Done."
# fi
#
# if [ "$(date +%d)" -lt 8 ] && [ "$(date +%u)" -gt 5 ]; then
#     echo "Running monthly snapshot. "
#     sudo rsnapshot -v monthly
#     echo "Done."
# fi
