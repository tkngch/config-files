# .zshrc
# See also /etc/zshrc

# Environment variables
export LESS="-r"  # color support
export GREP_COLOR='1;33'  # color grep output in yellow

typeset -U path  # Keep only the unique elements in PATH

if [ -d /opt/homebrew/bin ]; then
    # Load the completion files that homebrew provides, by allowing the
    # directories that are group-writable. To allow multiple users to use
    # homebrew, the homebrew directory needs to be owned by a group:
    #   sudo chgrp -R admin /opt/homebrew
    #   sudo chmod -R g+rwX /opt/homebrew
    ZSH_LOAD_INSECURE_COMP=true

    # opt out of Homebrewâ€™s analytics
    export HOMEBREW_NO_ANALYTICS=1

    # Set PATH, MANPATH, etc., for Homebrew.
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# ALIASES
# =======
alias ls='/bin/ls --color=auto'
alias mkdir='mkdir -v'
alias mv='mv -iv'
alias cp='cp -i -p'
alias rm='rm -iv'
alias grep='grep --color=always'


# COMMAND HISTORY
# ===============
HISTSIZE=100000
SAVEHIST=100000
setopt SHARE_HISTORY  # share history between sessions


# KEYBINDINGS
# ===========
# Make sure the terminal is in application mode, when zle is active. Only then
# are the values from $terminfo valid.
if (( ${+terminfo[smkx]} && ${+terminfo[rmkx]} )); then
    autoload -Uz add-zle-hook-widget
    function zle_application_mode_start { echoti smkx }
    function zle_application_mode_stop { echoti rmkx }
    add-zle-hook-widget -Uz zle-line-init zle_application_mode_start
    add-zle-hook-widget -Uz zle-line-finish zle_application_mode_stop
fi

# Show only the past commands matching the current line up to the current cursor
# position when Up or Down keys are pressed.
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
[[ -n ${key[Up]} ]] && bindkey "${key[Up]}" up-line-or-beginning-search
[[ -n ${key[Down]} ]] && bindkey "${key[Down]}" down-line-or-beginning-search


# COMPLETION SYSTEM
# =================
# man zshcompsys
autoload -U compinit
# move the cursor around the list of completions to select one
zstyle ':completion:*' menu select
# This way you tell zsh comp to take the first part of the path to be exact,
# and to avoid partial globs. Now path completions became nearly immediate.
zstyle ':completion:*' accept-exact '*(N)'
# autocomplete aliases
setopt COMPLETE_ALIASES
# initialise
if [[ "$ZSH_LOAD_INSECURE_COMP" != true ]]; then
  # Load only from secure directories
  compinit
else
  # With '-u' option, the completion system uses files that are not owned by
  # root or by the current user, and files in directories that are world- or
  # group-writable.
  compinit -u
fi


# REMEMBERING RECENT DIRECTORIES
# ==============================
# man zshcontrib
#
# The function cdr allows you to change the working directory to a previous
# working directory from a list maintained automatically.

autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':completion:*:*:cdr:*:*' menu selection


# DIRSTACK
# ========
DIRSTACKSIZE=0


# GATHERING INFORMATION FROM VERSION CONTROL SYSTEMS
# ==================================================
# man zshcontrib
autoload -Uz vcs_info
# Format parameters
# %s     The VCS in use (git, hg, svn, etc.).
# %b     Information about the current branch.
# %a     An identifier that describes the action. Only makes sense in actionformats.
zstyle ':vcs_info:git:*' formats '%s: %F{magenta}%b%f'
# A list of formats, used on a special action (e.g., an interactive rebase and a merge conflict).
zstyle ':vcs_info:git:*' actionformats '%s: %a|%b'
setopt PROMPT_SUBST  # To use '${vcs_info_msg_0_}' in the prompt


# PROMPT
# ======
# man zshmisc
precmd() { vcs_info }
# %B (%b) Start (stop) boldface mode.
# %F (%f) Start (stop) using a different foreground colour.
PROMPT='
${vcs_info_msg_0_}
%B%d%b
%# '


# MISC
# ====
unsetopt beep

# disable XON/XOFF flow control (^s/^q)
stty -ixon

# zsh-syntax-highlighting.zsh must be sourced at the end:
# https://github.com/zsh-users/zsh-syntax-highlighting#why-must-zsh-syntax-highlightingzsh-be-sourced-at-the-end-of-the-zshrc-file
source "$HOME/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

if [ -f "$HOME/.config/zsh/extra.zsh" ]; then
    source "$HOME/.config/zsh/extra.zsh"
fi
