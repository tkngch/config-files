
set-option -g default-terminal screen-256color


# Set the base index from which an unused index should be searched when a new
# window is created.  The default is zero.
set-option -g base-index 1


# Set the command used for new windows (if not specified when the window is
# created) to shell-command, which may be any sh(1) command.  The default is an
# empty string, which instructs tmux to create a login shell using the value of
# the default-shell option.
set -g default-command /bin/zsh


# Specify the default shell.  This is used as the login shell for new windows
# when the default-command option is set to empty, and must be the full path of
# the executable.  When started tmux tries to set a default value from the
# first suitable of the SHELL environment variable, the shell returned by
# getpwuid(3), or /bin/sh.  This option should be configured when tmux is used
# as a login shell.
set -g default-shell /bin/zsh

# Set the maximum number of lines held in window history.
set -g history-limit 100000


# FORMATS #
    #H       Hostname of local host
    #h       Hostname of local host (no domain name)
    #D       Unique pane ID
    #P       Index of pane
    #T       Title of pane
    #S       Name of session
    #F       Window flags
    #I       Index of window
    #W       Name of window
# See more at man tmux



#################
##### TITLE #####
#################

# Attempt to set the client terminal title using the tsl and fsl terminfo(5)
# entries if they exist.  tmux automatically sets these to the \e]0;...\007
# sequence if the terminal appears to be xterm(1).  This option is off by
# default.
set-option -g set-titles on

# String used to set the window title if set-titles is on.
set-option -g set-titles-string 'tmux session: #S'


#######################
##### STATUS LINE #####
#######################

# Show or hide the status line
set-option -g status on

# Update the status bar every interval seconds.  By default, updates will occur
# every 15 seconds.  A setting of zero disables redrawing at interval.
set-option -g status-interval 1

# Set the position of the window list component of the status line: left,
# centre or right justified.
set-option -g status-justify left

# Set the position of the status line.
set-option -g status-position top
# set-option -g status-position bottom

# Set status line style.
set-option -g status-style "fg=default,bg=default"

# Instruct tmux to treat top-bit-set characters in the status-left and
# status-right strings as UTF-8; notably, this is important for wide
# characters.  This option defaults to off.
# set-option -g status-utf8 on
# DEPRECATED AS OF VERSION 2.2

# If on, display a status line message when activity occurs in a window for
# which the monitor-activity window option is enabled.
set-option -g visual-activity off

# If this option is on, a message is shown on a bell instead of it being passed
# through to the terminal (which normally makes a sound).  Also see the
# bell-action option.
set-option -g visual-bell off

### Left ###
# Display string (by default the session name) to the left of the status bar.
# set -g status-left '#{?client_prefix,#[bg=magenta fg=magenta] ,#[fg=black] }'
set -g status-left \
    '#{?client_prefix,#[bg=default fg=default](,#[bg=default fg=default][}#S#{?client_prefix,),]}'

# Set the maximum length of the left component of the status bar.  The default
# is 10.
set-option -g status-left-length 10

# Set the style of the left part of the status line.
# set -g status-left-style style


### Right ###
# Display string to the right of the status bar.
# set -g status-right "%a %d %b, %H:%M"
# set-option -g status-right "#[fg=colour0,bg=colour4] %a %d %b, %H:%M #[none,fg=default,bg=default] #H "
# set-option -g status-right "#[fg=colour4,bg=colour0,bold] #H #[none,fg=default,bg=default] "
# set-option -g status-right "#[fg=colour7]%a %d %b %H:%M #[fg=colour4]@#[bold]#H #[none,fg=default,bg=default]"
# set-option -g status-right "#[fg=blue]@#[bold]#H#[none,fg=default,bg=default]"
set-option -g status-right "%H%M"

# Set the maximum length of the left component of the status bar.  The default
# is 40.
set-option -g status-right-length 40

# set -g status-right "#[fg=cyan]#(/home/takao/bin/tmux_system_status/tmux_system_status)" # | #[bold]%a %d %B, %H:%M" #'#H'


##################
##### WINDOW #####
##################

# Aggressively resize the chosen window.  This means that tmux will resize the
# window to the size of the smallest session for which it is the current
# window, rather than the smallest session to which it is attached.  The window
# may resize when the current window is changed on another sessions; this
# option is good for full-screen programs which support SIGWINCH and poor for
# interactive programs such as shells.
set-window-option -g aggressive-resize on

# Control automatic window renaming.  When this setting is enabled, tmux will
# rename the window automatically using the format specified by
# automatic-rename-format.  This flag is automatically disabled for an
# individual window when a name is specified at creation with new-window or
# new-session, or later with rename-window, or with a terminal escape sequence.
# It may be switched off globally with: set-window-option -g automatic-rename off
set-window-option -g automatic-rename on

# Monitor for activity in the window. Windows with activity are highlighted in
# the status line.
set-window-option -g monitor-activity on

# Set the style for the window's active pane.
# set-window-option -g window-active-style "fg=colour15,bg=colour0"

# Set status line style for windows with an activity alert.
set-window-option -g window-status-activity-style "none,bold"

# window-status-bell-style style
# Set status line style for windows with a bell alert.
set-window-option -g window-status-bell-style "none"

# Like window-status-format, but is the format used when the window is the
# current window.
set-window-option -g window-status-current-format " #I.#W "

# Set status line style for the currently active window.
set-window-option -g window-status-current-style "fg=yellow,bg=default"

# Set the format in which the window is displayed in the status line window
# list.
set-window-option -g window-status-format " #I.#W "

# Set status line style for the last active window.
# set-window-option -g window-status-last-style style

# Sets the separator drawn between windows in the status line.  The default is
# a single space character.
set-window-option -g window-status-separator ""

# Set status line style for a single window.
# window-status-style style

# Set the default window style.
# foreground (fg) and background (bg) colors for inactive panes
set-window-option -g window-style "fg=default,bg=default"

# Set the pane border style for panes aside from the active pane.
set-window-option -g pane-border-style "fg=black,bg=default"

# Set the pane border style for the currently active pane.
set-window-option -g pane-active-border-style "fg=black,bg=default"


#################
##### MOUSE #####
#################

# If on, tmux captures the mouse and allows mouse events to be bound as key bindings.
set-option -g mouse on

# Diable the right-click menu.
unbind -n MouseDown3Pane

###############
##### KEY #####
###############

# Set the time in milliseconds for which tmux waits after an escape is input to
# determine if it is part of a function or meta key sequences.  The default is
# 500 milliseconds.
# The default is half a second, which makes vim kind of painful.
set-option -sg escape-time 0

# Set the key accepted as a prefix key.
set-option -g prefix C-a

# vi-like bindings
# Use vi or emacs-style key bindings in the status line, for example at the
# command prompt.  The default is emacs, unless the VISUAL or EDITOR
# environment variables are set and contain the string ‘vi’.
set-option -g status-keys vi

# Use vi or emacs-style key bindings in copy and choice modes.  As with the
# status-keys option, the default is emacs, unless VISUAL or EDITOR contains
# ‘vi’.
set-window-option -g mode-keys vi


##################################
############# Hooks ##############
##################################

# Flash the active pane every time a pane is selected.
set-hook -g after-select-pane 'run-shell "tmux set-window-option -g window-active-style \"bg=colour16\" && sleep .01 && tmux set -g window-active-style \"\" "'
# Flash the active pane every time a window is selected.
set-hook -g after-select-window 'run-shell "tmux set-window-option -g window-active-style \"bg=colour16\" && sleep .03 && tmux set -g window-active-style \"\" "'

###################################################
############## key bindings #######################
###################################################

# Unbind non-used key bindings
unbind-key C-b  # Send the prefix key (C-b) through to the application.
unbind-key C-o  # Rotate the panes in the current window forwards.
unbind-key C-z  # Suspend the tmux client.
unbind-key !  # Break the current pane out of the window.
unbind-key '"'  # Split the current pane into two, top and bottom.
unbind-key '#' # List all paste buffers.
unbind-key '$'  # Rename the current session.
unbind-key %  # Split the current pane into two, left and right.
unbind-key &  # Kill the current window.
unbind-key "'"  # Prompt for a window index to select.
unbind-key (  # Switch the attached client to the previous session.
unbind-key )  # Switch the attached client to the next session.
# unbind-key ,  # Rename the current window.
unbind-key -  # Delete the most recently copied buffer of text.
# unbind-key .  # Prompt for an index to move the current window.
# unbind-key 0 to 9  # Select windows 0 to 9.
# unbind-key :  # Enter the tmux command prompt.
unbind-key \;  # Move to the previously active pane.
unbind-key =  # Choose which buffer to paste interactively from a list.
unbind-key ?  # List all key bindings.
unbind-key D  # Choose a client to detach.
unbind-key L  # Switch the attached client back to the last session.
unbind-key [  # Enter copy mode to copy text or view the history.
unbind-key ]  # Paste the most recently copied buffer of text.
unbind-key c  # Create a new window.
unbind-key d  # Detach the current client.
unbind-key f  # Prompt to search for text in open windows.
unbind-key i  # Display some information about the current window.
unbind-key l  # Move to the previously selected window.
unbind-key n  # Change to the next window.
unbind-key o  # Select the next pane in the current window.
unbind-key p  # Change to the previous window.
unbind-key q  # Briefly display pane indexes.
unbind-key r  # Force redraw of the attached client.
unbind-key m  # Mark the current pane (see select-pane -m).
unbind-key M  # Clear the marked pane.
unbind-key s  # Select a new session for the attached client interactively.
unbind-key t  # Show the time.
unbind-key w  # Choose the current window interactively.
unbind-key x  # Kill the current pane.
unbind-key z  # Toggle zoom state of the current pane.
unbind-key '{'  # Swap the current pane with the previous pane.
unbind-key '}'  # Swap the current pane with the next pane.
unbind-key '~'  # Show previous messages from tmux, if any.
unbind-key PageUp  # Enter copy mode and scroll one page up.
unbind-key Up  # Change to the pane above of the current pane.
unbind-key Down  # Change to the pane below of the current pane.
unbind-key Left  # Change to the pane left of the current pane.
unbind-key Right  # Change to the pane right of the current pane.
unbind-key M-1  # Arrange panes in even-horizontal
unbind-key M-2  # Arrange panes in even-vertical
unbind-key M-3  # Arrange panes in main-horizontal
unbind-key M-4  # Arrange panes in main-vertical
unbind-key M-5  # Arrange panes in tiled
unbind-key Space  # Arrange the current window in the next preset layout.
unbind-key M-n  # Move to the next window with a bell or activity marker.
unbind-key M-o  # Rotate the panes in the current window backwards.
unbind-key M-p  # Move to the previous window with a bell or activity marker.
unbind-key C-Up  # Resize the current pane in steps of one cell.
unbind-key C-Down  # Resize the current pane in steps of one cell.
unbind-key C-Left  # Resize the current pane in steps of one cell.
unbind-key C-Right  # Resize the current pane in steps of one cell.
unbind-key M-Up  # Resize the current pane in steps of five cell.
unbind-key M-Down  # Resize the current pane in steps of five cell.
unbind-key M-Left  # Resize the current pane in steps of five cell.
unbind-key M-Right  # Resize the current pane in steps of five cell.

bind-key C-a last-window  # Select the last (previously selected) window.
bind-key c new-window  # Create a new window.
bind-key C-n next-window  # Move to the next window in the session.
bind-key C-p previous-window  # Move to the previous window in the session.
bind-key - split-window -v  # Create a new pane by vertically splitting target-pane.
bind-key | split-window -h  # Create a new pane by horizontally splitting target-pane.
bind-key w choose-tree -Zw  # Put a pane into tree mode, where a session, window or pane may be chosen interactively from a list.
bind-key z resize-pane -Z  # Toggle the active pane zoomed (occupying the whole of the window) and unzoomed (its normal position in the layout).

bind-key [ copy-mode  # Enter copy mode to copy text or view the history.
bind-key p paste-buffer  # Insert the contents of a paste buffer into the specified pane.
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection-and-cancel
bind-key -Tcopy-mode-vi Escape send -X cancel

bind-key Space next-layout  # Move a window to the next layout and rearrange the panes to fit.

bind-key j select-pane -D  # Make the pane below target-pane.
bind-key k select-pane -U  # Make the pane above target-pane.
bind-key h select-pane -L  # Make the left pane target-pane.
bind-key l select-pane -R  # Make the right pane target-pane.

bind-key C-j resize-pane -D 5  # Resize a pane downwards by 5 cells.
bind-key C-k resize-pane -U 5  # Resize a pane upwards by 5 cells.
bind-key C-h resize-pane -L 5  # Resize a pane to the left by 5 cells.
bind-key C-l resize-pane -R 5  # Resize a pane to the right by 5 cells.

bind-key C-b break-pane  # Break the pane off from its containing window.
bind-key C-m command-prompt -p "send pane to:" "join-pane -t '%%'"  # Move the pane into the selected window.

bind-key t clock-mode  # Display a large clock.
bind-key d detach-client  # Detach the current client.
bind-key C-o rotate-window  # Rotate the positions of the panes within a window.
bind r source-file ~/.tmux.conf \; display-message "sourced .tmux.conf"
