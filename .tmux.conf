
set-option -g default-terminal screen-256color


# Set the base index from which an unused index should be searched when a new
# window is created.  The default is zero.
set-option -g base-index 1


# Set the command used for new windows (if not specified when the window is
# created) to shell-command, which may be any sh(1) command.  The default is an
# empty string, which instructs tmux to create a login shell using the value of
# the default-shell option.
set -g default-command /bin/zsh


# Specify the default shell.  This is used as the login shell for new windows
# when the default-command option is set to empty, and must be the full path of
# the executable.  When started tmux tries to set a default value from the
# first suitable of the SHELL environment variable, the shell returned by
# getpwuid(3), or /bin/sh.  This option should be configured when tmux is used
# as a login shell.
set -g default-shell /bin/zsh



# FORMATS #
    #H       Hostname of local host
    #h       Hostname of local host (no domain name)
    #D       Unique pane ID
    #P       Index of pane
    #T       Title of pane
    #S       Name of session
    #F       Window flags
    #I       Index of window
    #W       Name of window
# See more at man tmux



#################
##### TITLE #####
#################

# Attempt to set the client terminal title using the tsl and fsl terminfo(5)
# entries if they exist.  tmux automatically sets these to the \e]0;...\007
# sequence if the terminal appears to be xterm(1).  This option is off by
# default.
set-option -g set-titles on

# String used to set the window title if set-titles is on.
set-option -g set-titles-string 'tmux session: #S'


#######################
##### STATUS LINE #####
#######################

# Show or hide the status line
set-option -g status on

# Update the status bar every interval seconds.  By default, updates will occur
# every 15 seconds.  A setting of zero disables redrawing at interval.
set-option -g status-interval 1

# Set the position of the window list component of the status line: left,
# centre or right justified.
set-option -g status-justify left

# Set the position of the status line.
set-option -g status-position top
# set-option -g status-position bottom

# Set status line style.
set-option -g status-style "fg=default,bg=default"

# Instruct tmux to treat top-bit-set characters in the status-left and
# status-right strings as UTF-8; notably, this is important for wide
# characters.  This option defaults to off.
# set-option -g status-utf8 on
# DEPRECATED AS OF VERSION 2.2

# If on, display a status line message when activity occurs in a window for
# which the monitor-activity window option is enabled.
set-option -g visual-activity off

# If this option is on, a message is shown on a bell instead of it being passed
# through to the terminal (which normally makes a sound).  Also see the
# bell-action option.
set-option -g visual-bell off



### Left ###
# Display string (by default the session name) to the left of the status bar.
# set-option -g status-left " "
# shows ✱ when prefix key is pressed
# set -g status-left '#{?client_prefix,#[bg=magenta fg=magenta] ,#[fg=black] }'
set -g status-left '#{?client_prefix,#[bg=default fg=colour5 bold],#[bg=default fg=colour2 bold]} #S '

# Set the maximum length of the left component of the status bar.  The default
# is 10.
set-option -g status-left-length 10

# Set the style of the left part of the status line.
# set -g status-left-style style


### Right ###
# Display string to the right of the status bar.
# set -g status-right "%a %d %b, %H:%M"
# set-option -g status-right "#[fg=colour0,bg=colour4] %a %d %b, %H:%M #[none,fg=default,bg=default] #H "
# set-option -g status-right "#[fg=colour4,bg=colour0,bold] #H #[none,fg=default,bg=default] "
set-option -g status-right "#[fg=colour7]%a %d %b %H:%M #[fg=colour4]@#[bold]#H #[none,fg=default,bg=default]"

# Set the maximum length of the left component of the status bar.  The default
# is 40.
set-option -g status-right-length 40

# Set the style of the right part of the status line.
# set -g status-right-style style

# set -g status-right "#[fg=cyan]#(/home/takao/bin/tmux_system_status/tmux_system_status)" # | #[bold]%a %d %B, %H:%M" #'#H'


##################
##### WINDOW #####
##################

# Aggressively resize the chosen window.  This means that tmux will resize the
# window to the size of the smallest session for which it is the current
# window, rather than the smallest session to which it is attached.  The window
# may resize when the current window is changed on another sessions; this
# option is good for full-screen programs which support SIGWINCH and poor for
# interactive programs such as shells.
set-window-option -g aggressive-resize on

# Control automatic window renaming.  When this setting is enabled, tmux will
# rename the window automatically using the format specified by
# automatic-rename-format.  This flag is automatically disabled for an
# individual window when a name is specified at creation with new-window or
# new-session, or later with rename-window, or with a terminal escape sequence.
# It may be switched off globally with: set-window-option -g automatic-rename off
set-window-option -g automatic-rename on

# Monitor for activity in the window. Windows with activity are highlighted in
# the status line.
set-window-option -g monitor-activity on

# Set the style for the window's active pane.
# set-window-option -g window-active-style "fg=colour15,bg=colour0"

# Set status line style for windows with an activity alert.
set-window-option -g window-status-activity-style "none,bold"

# window-status-bell-style style
# Set status line style for windows with a bell alert.
set-window-option -g window-status-bell-style "none"

# Like window-status-format, but is the format used when the window is the
# current window.
set-window-option -g window-status-current-format " #I.#W "

# Set status line style for the currently active window.
set-window-option -g window-status-current-style "fg=colour14,bg=default"

# Set the format in which the window is displayed in the status line window
# list.
set-window-option -g window-status-format " #I.#W "

# Set status line style for the last active window.
# set-window-option -g window-status-last-style style

# Sets the separator drawn between windows in the status line.  The default is
# a single space character.
set-window-option -g window-status-separator ""

# Set status line style for a single window.
# window-status-style style

# Set the default window style.
# foreground (fg) and background (bg) colors for inactive panes
set-window-option -g window-style "fg=default,bg=default"

# Set the pane border style for panes aside from the active pane.
set-window-option -g pane-border-style "fg=colour0,bg=default"

# Set the pane border style for the currently active pane.
set-window-option -g pane-active-border-style "fg=colour0,bg=default"


#################
##### MOUSE #####
#################

# If on, tmux captures the mouse and allows mouse events to be bound as key bindings.
set-option -g mouse on

# For mouse wheel scrolling as from tmux 2.1 try adding one or both of these to ~/.tmux.conf
bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Though the above will only scroll one line at a time, add this solution to scroll an entire page instead
# bind -t vi-copy    WheelUpPane   page-up
# bind -t vi-copy    WheelDownPane page-down
# bind -t emacs-copy WheelUpPane   page-up
# bind -t emacs-copy WheelDownPane page-down


###################################################
############## key bindings #######################
###################################################

# Set the time in milliseconds for which tmux waits after an escape is input to
# determine if it is part of a function or meta key sequences.  The default is
# 500 milliseconds.
# The default is half a second, which makes vim kind of painful.
set-option -sg escape-time 0

# Switch me back to ^A, thanks
set-option -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# Bind ^A ctrl-space to switch to the next window to the right,
# ^A space to switch to the next window to the left, and
# ^A ^A to switch to the last-used window:
bind-key C-a last-window
#bind-key C-Space next-window
#bind-key Space previous-window

# bind-key c new-window -c "#{pane_current_path}"
bind-key c new-window
# bind-key - split-window -v -c "#{pane_current_path}"
bind-key - split-window -v
unbind-key % # unbind default split-wondow -h
# bind-key | split-window -h -c "#{pane_current_path}"
bind-key | split-window -h

# vi-like bindings
# Use vi or emacs-style key bindings in the status line, for example at the
# command prompt.  The default is emacs, unless the VISUAL or EDITOR
# environment variables are set and contain the string ‘vi’.
set-option -g status-keys vi

# Use vi or emacs-style key bindings in copy and choice modes.  As with the
# status-keys option, the default is emacs, unless VISUAL or EDITOR contains
# ‘vi’.
set-window-option -g mode-keys vi

# bind-key -t vi-copy 'v' begin-selection
# bind-key v begin-selection
# bind-key -t vi-copy 'y' copy-selection
# bind-key y copy-selection

bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-h resize-pane -L 5
bind-key C-l resize-pane -R 5

unbind-key o
bind-key C-b break-pane
bind-key C-m command-prompt -p "send pane to:" "join-pane -t '%%'"

bind r source-file ~/.tmux.conf
