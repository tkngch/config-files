###################################################
############## options ############################
###################################################

set-option -g default-terminal screen-256color


# Turn on window titles
# set -g set-titles on
set -g set-titles off
# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
# set -g set-titles-string '#S:#I.#P #W'
# set -g set-titles-string 'tmux #S:#I #W'

# Automatically set window title
#setw -g automatic-rename

# Set status bar
set -g status-position bottom
set -g status-bg black
set -g status-fg white

# interval needs to be greater than 1 for the system status to be functional
set -g status-interval 2
# Left shows the session name
set -g status-left-length 100
# set -g status-left '#[fg=yellow bold]#S  '
set -g status-left '#S  '
# Right shows system status
set -g status-right-length 100
# set -g status-right "#[fg=cyan]#(/home/takao/bin/tmux_system_status/tmux_system_status)" # | #[bold]%a %d %B, %H:%M" #'#H'
# set -g status-right "#[bold]%a %d %b, %H:%M #[fg=green]#H"
set -g status-right "#[bold]%a %d %b, %H:%M"


set-window-option -g window-status-current-format '#I.#W '
set-window-option -g window-status-format '#I.#W '
# Highlight active window
# set-window-option -g window-status-current-fg '#C4DF90'
set-window-option -g window-status-current-fg 'yellow'

# set the pane border colors
# set -g pane-border-fg white
# set -g pane-border-bg colour235
# set -g pane-active-border-fg yellow
# set -g pane-active-border-bg colour235

# change the background color of inactive window
# this option remove transparency
# set -g window-style 'fg=colour240,bg=colour235'
# set -g window-active-style 'bg=black'

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

# Set the esc/alt disambiguation timeout to 0ms.
# The default is half a second, which makes vim kind of painful.
set-option -sg escape-time 0

# Start numbering windows at 1, not 0.
# I like the leftmost window to be the leftmost number on my keyboard.
set-option -g base-index 1

# When a smaller terminal connects to a tmux client, it shrinks to fit it. The
# clients attached with bigger displays see this constrained view.
# aggressive-resize makes it such that the window is only resized if the
# smaller client is actively looking at it.
setw -g aggressive-resize on


###################################################
############## key bindings #######################
###################################################

# Switch me back to ^A, thanks
set-option -g prefix C-a
unbind-key C-b
bind-key a send-prefix

# Bind ^A ctrl-space to switch to the next window to the right,
# ^A space to switch to the next window to the left, and
# ^A ^A to switch to the last-used window:
bind-key C-a last-window
#bind-key C-Space next-window
#bind-key Space previous-window

# bind-key c new-window -c "#{pane_current_path}"
bind-key c new-window
# bind-key - split-window -v -c "#{pane_current_path}"
bind-key - split-window -v
unbind-key % # unbind default split-wondow -h
# bind-key | split-window -h -c "#{pane_current_path}"
bind-key | split-window -h

# vi-like bindings
set -g status-keys vi
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-h resize-pane -L 5
bind-key C-l resize-pane -R 5

unbind-key o
bind-key C-b break-pane
bind-key C-m command-prompt -p "send pane to:" "join-pane -t '%%'"

bind r source-file ~/.tmux.conf


###################################################
############## session initialisation #############
###################################################
# new -s sessionname

